SELECT_1: 
SELECT * FROM software_houses WHERE country = 'United States';

SELECT_2:
SELECT * FROM players WHERE city = 'Rogahnland';

SELECT_3:
SELECT * FROM players WHERE players.name LIKE '%a';

SELECT_4:
SELECT * FROM reviews WHERE reviews.player_id = 800;

SELECT_5:
SELECT COUNT(*) FROM tournaments WHERE tournaments.year = 2015;

SELECT_6:
SELECT * FROM awards WHERE awards.description LIKE '%facere%';

SELECT_7:
SELECT DISTINCT videogame_id
FROM category_videogame
WHERE category_id = 2 or category_id = 6;

SELECT_8:
SELECT * FROM reviews WHERE reviews.rating BETWEEN 2 AND 4;

SELECT_9:
SELECT * FROM videogames WHERE YEAR(videogames.release_date) = 2020;

SELECT_10:
SELECT videogame_id FROM reviews
WHERE reviews.rating >= 5
GROUP BY reviews.videogame_id;

SELECT videogames.id
FROM videogames
JOIN reviews ON reviews.videogame_id = videogames.id
WHERE reviews.rating >= 5
GROUP BY videogames.id;

SELECT_11:
SELECT COUNT(reviews.id) AS  review_number, AVG(reviews.rating) as avg_rating
FROM reviews
WHERE reviews.videogame_id = 412;

SELECT_12:
SELECT COUNT(*) AS videogames_count 
FROM videogames
WHERE videogames.software_house_id = 1 AND YEAR(videogames.release_date) = 2018;


GROUP BY section:

GROUP_BY_1:
SELECT  software_houses.country, COUNT(*) AS software_houses
FROM software_houses
GROUP BY software_houses.country;

GROUP_BY_2:
SELECT reviews.videogame_id AS videogame_id, COUNT(*) AS review_number
FROM reviews
GROUP BY videogame_id;

GROUP_BY_3:
SELECT pegi_label_videogame.pegi_label_id, COUNT(*) AS number_of_videogames
FROM pegi_label_videogame
GROUP BY pegi_label_videogame.pegi_label_id;

GROUP_BY_4:
SELECT YEAR(videogames.release_date) AS 'year', COUNT(*) AS number_of_videogames
FROM videogames
GROUP BY YEAR(videogames.release_date);

GROUP_BY_5:
SELECT device_videogame.device_id, COUNT(*) AS number_of_videogames
FROM device_videogame
GROUP BY device_videogame.device_id;

GROUP_BY_6:
SELECT reviews.videogame_id, AVG(reviews.rating) AS average_rating
FROM reviews
GROUP BY reviews.videogame_id
ORDER BY average_rating DESC;



JOIN section:

JOIN_1:
SELECT DISTINCT players.*
FROM players
JOIN reviews ON reviews.player_id = players.id;

JOIN_2:
SELECT DISTINCT videogames.name, videogames.id, tournaments.year
FROM videogames
JOIN tournament_videogame ON tournament_videogame.videogame_id = videogames.id
JOIN tournaments ON tournaments.id = tournament_videogame.tournament_id
WHERE tournaments.year = 2016;

JOIN_3:
SELECT DISTINCT  videogames.id AS game_id,
videogames.name AS game_name,
categories.name AS category_name
FROM videogames
JOIN category_videogame ON category_videogame.videogame_id = videogames.id
JOIN categories ON categories.id = category_videogame.category_id;

JOIN_4:
SELECT software_houses.id, software_houses.name, 
software_houses.country, software_houses.tax_id
FROM software_houses
JOIN videogames ON software_houses.id = videogames.software_house_id
WHERE YEAR(videogames.release_date) > 2020
GROUP BY software_houses.id, software_houses.name, 
software_houses.country, software_houses.tax_id;

JOIN_5 (da rivedere):
SELECT awards.name AS awards_name, software_houses.name AS software_house_name
FROM awards
JOIN award_videogame ON award_videogame.id = awards.id
JOIN videogames ON videogames.id = award_videogame.videogame_id
JOIN software_houses ON software_houses.id = videogames.software_house_id;

JOIN_6:
SELECT  categories.name AS category_name, pegi_labels.name pegi_name, videogames.name AS game_name
FROM categories
JOIN category_videogame ON category_videogame.category_id = categories.id
JOIN videogames ON videogames.id = category_videogame.videogame_id
JOIN pegi_label_videogame ON pegi_label_videogame.videogame_id = videogames.id
JOIN pegi_labels ON pegi_labels.id = pegi_label_videogame.pegi_label_id
JOIN reviews ON reviews.videogame_id = videogames.id
WHERE reviews.rating >= 4
GROUP BY categories.name, pegi_labels.name, videogames.name;

JOIN_7:
SELECT DISTINCT videogames.id, videogames.name FROM videogames
JOIN tournament_videogame ON tournament_videogame.videogame_id = videogames.id
JOIN player_tournament ON player_tournament.tournament_id = tournament_videogame.tournament_id
JOIN players ON players.id = player_tournament.player_id
WHERE players.name LIKE 'S%';

JOIN_8:
SELECT tournaments.city FROM tournaments
JOIN tournament_videogame ON tournament_videogame.tournament_id = tournaments.id
JOIN award_videogame ON award_videogame.videogame_id = tournament_videogame.videogame_id
JOIN awards ON awards.id = award_videogame.award_id
WHERE awards.id = 1 AND award_videogame.year = 2018;

JOIN_9:
SELECT players.name FROM players
JOIN player_tournament ON player_tournament.player_id = players.id
JOIN tournaments ON tournaments.id = player_tournament.tournament_id
JOIN tournament_videogame ON tournament_videogame.tournament_id = player_tournament.tournament_id
JOIN award_videogame ON award_videogame.videogame_id = tournament_videogame.videogame_id
WHERE award_videogame.award_id = 5 
AND award_videogame.year = 2018 
AND tournaments.year = 2019;

*********** BONUS ***********

JOIN_10:
SELECT TOP 1 
videogames.id AS game_id,
videogames.name AS game_name, 
videogames.release_date,
software_houses.id AS s_house_id,
software_houses.name AS s_house_name,
software_houses.country AS s_house_country,
software_houses.city AS s_house_city
FROM videogames
JOIN software_houses ON software_houses.id = videogames.software_house_id
ORDER BY videogames.release_date ASC;

- with a subquery -

SELECT 
videogames.id AS game_id,
videogames.name AS game_name, 
videogames.release_date, 
software_houses.id AS s_house_id,
software_houses.name AS s_house_name,
software_houses.country AS s_house_country,
software_houses.city AS s_house_city
FROM videogames
JOIN software_houses ON software_houses.id = videogames.software_house_id
WHERE videogames.release_date = (SELECT MIN(release_date) FROM videogames);

JOIN_11:
SELECT TOP 1 
videogames.id,
videogames.name,
videogames.release_date,
COUNT(reviews.id) AS total_reviews
FROM videogames
JOIN reviews ON reviews.videogame_id = videogames.id
GROUP BY videogames.id, videogames.name, videogames.release_date
ORDER BY total_reviews DESC;

JOIN_12:
SELECT TOP 1
software_houses.id AS s_h_id,
software_houses.name,
COUNT(award_videogame.id) AS number_of_awards
FROM software_houses
JOIN videogames ON videogames.software_house_id = software_houses.id
JOIN award_videogame ON award_videogame.videogame_id = videogames.id
WHERE award_videogame.year BETWEEN 2015 AND 2016
GROUP BY software_houses.name, software_houses.id
ORDER BY number_of_awards DESC;

JOIN_13(da rivedere):
SELECT
categories.name,
AVG(reviews.rating) AS avg_review
FROM categories
JOIN category_videogame ON category_videogame.category_id = categories.id
JOIN reviews ON reviews.videogame_id = category_videogame.videogame_id
GROUP BY categories.name
HAVING AVG(reviews.rating) <2;






















